/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWORF 1
#define NUM 2
#define NAV 3
#define OPS 4
#define ART 5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        nt: neutral_thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "NEUTRAL_THUMB_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        qworf: qworf {
            compatible = "zmk,behavior-mod-morph";
            label = "QWORF_TOGGLE";
            #binding-cells = <0>;
            bindings = <&none>, <&tog QWORF>;
            mods = <(MOD_RSFT|MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
 
        default_layer {
            // ┌──────┬──────┬──────┬──────┬──────┬──────┐                 ┌──────┬──────┬──────┬──────┬──────┬──────┐
            // | Tab  |  Q   |  W   |  E   |  R   |  T   |                 |   Y  |   U  |   I  |   O  |   P  |  Bsp |
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // | Esc  |  A   |  S   |  D   |  F   |  G   |                 |   H  |   J  |   K  |   L  |   ;  |   '  |
            // | LCtrl|      |      |      |      |      |                 |      |      |      |      |      | LCtrl|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |      |  Z   |  X   |  C   |  V   |  B   |                 |   N  |   M  |   ,  |   .  |   /  |   -  |
            // └──────┴──────┴──────┴──┬───┴──┬───┴──┬───┴──┐          ┌───┴──┬───┴──┬───┴──┬───┴──────┴──────┴──────┘
            //                         |  (   | Spc  |  [   |          |   ]  |  Ret |   )  |
            //                         |LShft | LAlt |*Num* |          | *Nav*| Meta | RShft|
            //                         └──────┴──────┴──────┘          └──────┴──────┴──────┘
            bindings = <
                &kp TAB      &kp Q  &kp W  &kp E  &kp R  &kp T            &kp Y  &kp U  &kp I    &kp O   &kp P    &kp BKSP
                &hm LCTL ESC &kp A  &kp S  &kp D  &kp F  &kp G            &kp H  &kp J  &kp K    &kp L   &kp SCLN &hm RCTL QUOT
                &qworf       &kp Z  &kp X  &kp C  &kp V  &kp B            &kp N  &kp M  &kp CMMA &kp DOT &kp FSLH &kp MINUS
                           &mt LSFT LPRN &nt LALT SPC &lt NUM LBKT    &lt NAV RBKT &nt LGUI RET &mt RSFT RPRN
            >;
        };

        qworf_layer {
            // ┌──────┬──────┬──────┬──────┬──────┬──────┐                 ┌──────┬──────┬──────┬──────┬──────┬──────┐
            // | Tab  |  Q   |  W   |  O   |  R   |  F   |                 |   Y  |   U  |   L  |   V  |   X  |  Bsp |
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // | Esc  |  A   |  S   |  H   |  T   |  G   |                 |   H  |   N  |   E  |   I  |   ;  |   '  |
            // | LCtrl|      |      |      |      |      |                 |      |      |      |      |      | LCtrl|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |      |  Z   |  J   |  D   |  C   |  B   |                 |   K  |   M  |   ,  |   .  |   /  |   -  |
            // └──────┴──────┴──────┴──┬───┴──┬───┴──┬───┴──┐          ┌───┴──┬───┴──┬───┴──┬───┴──────┴──────┴──────┘
            //                         |  (   | Spc  |  [   |          |   ]  |  Ret |   )  |
            //                         |LShft | LAlt |*Num* |          | *Nav*| Meta | RShft|
            //                         └──────┴──────┴──────┘          └──────┴──────┴──────┘
            bindings = <
                &kp TAB      &kp Q  &kp W  &kp O  &kp R  &kp F            &kp Y  &kp U  &kp L    &kp V   &kp X    &kp BKSP
                &hm LCTL ESC &kp A  &kp S  &kp H  &kp T  &kp G            &kp P  &kp N  &kp E    &kp I   &kp SCLN &hm RCTL QUOT
                &qworf       &kp Z  &kp J  &kp D  &kp C  &kp B            &kp K  &kp M  &kp CMMA &kp DOT &kp FSLH &kp MINUS
                           &mt LSFT LPRN &nt LALT SPC &lt NUM LBKT    &lt NAV RBKT &nt LGUI RET &mt RSFT RPRN
            >;
        };
 
        num_layer {
            // ┌──────┬──────┬──────┬──────┬──────┬──────┐                 ┌──────┬──────┬──────┬──────┬──────┬──────┐
            // | OPS  |      |      |  E   |  `   |  _   |                 |   *  |   7  |   8  |   9  |   -  |//////|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |//////|//////|      |  D   |  F   |  \   |                 |   /  |   4  |   5  |   6  |   +  |//////|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // | SHFT |      |      |//////|      |//////|                 |   =  |   1  |   2  |   3  |   .  |  Del |
            // └──────┴──────┴──────┴──┬───┴──┬───┴──┬───┴──┐          ┌───┴──┬───┴──┬───┴──┬───┴──────┴──────┴──────┘
            //                         |//////|//////|*Pad* |          | 0    |//////|//////|
            //                         └──────┴──────┴──────┘          └──────┴──────┴──────┘
            bindings = <
                &tog OPS  &none   &none  &kp E   &kp GRAV  &none         &kp KMLT  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp MINUS  &trans
                &trans    &trans  &none  &trans  &trans    &kp BSLH      &kp KDIV  &kp NUM_4  &kp NUM_5  &kp NUM_6  &kp KPLS   &trans
                &kp LSFT  &none   &none  &trans  &none     &trans        &kp EQL   &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp DOT    &kp DEL
                                           &trans  &trans  &trans    &kp NUM_0  &trans  &trans
            >;
        };
 
        nav_layer {
            // ┌──────┬──────┬──────┬──────┬──────┬──────┐                 ┌──────┬──────┬──────┬──────┬──────┬──────┐
            // |//////|      |      |      |      |      |                 |      |      |      |      |      |//////|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |//////| Home | PgUp | PgDn | End  |      |                 |   ←  |   ↓  |   ↑  |   →  |      |      |
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |      |      |      |      |      |      |                 |      |      |      |      |      |  OPS |
            // └──────┴──────┴──────┴──┬───┴──┬───┴──┬───┴──┐          ┌───┴──┬───┴──┬───┴──┬───┴──────┴──────┴──────┘
            //                         |//////|//////| ART  |          | *Nav*|//////|//////|
            //                         └──────┴──────┴──────┘          └──────┴──────┴──────┘
            bindings = <
                &trans  &none     &none     &none     &none    &none      &none     &none     &none     &none     &none  &trans
                &trans  &kp HOME  &kp PGUP  &kp PGDN  &kp END  &none      &kp LARW  &kp DARW  &kp UARW  &kp RARW  &none  &none
                &trans  &none     &none     &none     &none    &none      &none     &none     &none     &none     &none  &tog OPS
                                             &trans  &trans  &tog ART   &trans  &trans  &trans
            >;
        };
 
        ops_layer {
            // ┌──────┬──────┬──────┬──────┬──────┬──────┐                 ┌──────┬──────┬──────┬──────┬──────┬──────┐
            // | BOOT |BT P0 |BT P1 |BT P2 |BT P3 |BT P4 |                 |  F1  |  F2  |  F6  |      |      |//////|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |RESET |      |      |      |      |      |                 |      |      |      |      | Vol+ |BT_NXT|
            // ├──────┼──────┼──────┼──────┼──────┼──────┤                 ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |BT_CLR| Prev | Play | Next | Stop |      |                 |      |      |      | Mute | Vol- |  OPS |
            // └──────┴──────┴──────┴──┬───┴──┬───┴──┬───┴──┐          ┌───┴──┬───┴──┬───┴──┬───┴──────┴──────┴──────┘
            //                         |//////|//////|//////|          |//////|//////|//////|
            //                         └──────┴──────┴──────┘          └──────┴──────┴──────┘
            // BT 0 = persoal, BT 4 = work
            bindings = <
                &bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &kp F1  &kp F2  &kp F6  &none       &none       &trans
                &reset       &none         &none         &none         &none         &none          &none   &none   &none   &none       &cp M_VOLU  &bt BT_NXT
                &bt BT_CLR   &cp M_PREV    &cp M_PLAY    &cp M_NEXT    &cp M_STOP    &none          &none   &none   &none   &cp M_MUTE  &cp M_VOLD  &tog OPS
                                                   &trans  &trans  &trans     &trans  &trans  &trans
            >;
        };
 
        art_layer {
            // Condensed layout with common Krita functions collapsed onto left half of
            // keyboard. Only fall through mod functions on right half.
            // ┌──────┬──────┬──────┬──────┬──────┬──────┐
            // | ART  |  N   |  W   |  E   |  O   |  T   |
            // ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |//////|  A   |  S   |  D   |  J   |  G   |
            // ├──────┼──────┼──────┼──────┼──────┼──────┤
            // |LShft |  Z   |  X   |  C   |  V   |  B   |
            // └──────┴──────┴──────┴──┬───┴──┬───┴──┬───┴──┐
            //                         |//////|//////| Ins  |
            //                         |//////|//////|LCtrl |
            //                         └──────┴──────┴──────┘
            bindings = <
                &tog ART  &kp N  &kp W  &kp E  &kp O  &kp T       &none  &none  &none  &none  &none  &trans
                &trans    &kp A  &kp S  &kp D  &kp J  &kp G       &none  &none  &none  &none  &none  &trans
                &kp LSFT  &kp Z  &kp X  &kp C  &kp V  &kp B       &none  &none  &none  &none  &none  &tog ART
                               &trans  &trans  &mt LCTL INS       &trans  &trans  &trans
            >;
        };
    };
};

